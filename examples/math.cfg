//origin 200
// Basic Math Functions
//
// def square(n):
//		return n * n
//
// square(n)
LABLE square
s dup // [n] -> [n, n]
s mul // n * n
s ret

// def power(x, n: int):
// 		i = 1
//		while n > 0:
//			i = i * x
//			n = n - 1
//		return i
//
// power(x, n)
LABLE power
// store the arguments, n & x
s store_l n
s store_l x

// i = 1
s push 1
s store_l i

// while n > 0
// if n is less then 0 exit loop
LABLE math_power_main_loop
s load_l n
s push 0
s isle
s load_g math_power_exit_main_loop
s jif_vfs

// i = i * x
s load_l i
s load_l x
s mul
s store_l i

// n = n - 1
s load_l n
s push 1
s sub
s store_l n

s load_g math_power_main_loop
s jmp_vfs


LABLE math_power_exit_main_loop
// return i
s load_l i
s ret
